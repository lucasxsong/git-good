forcing revisions in work
october 23, 2018

i was lucky enough to create this repo during github's recent service outage on october 20th. lucky seems to be a weird way to 
describe this unfortunate timing, so i will attempt to elaborate what i learned from my experience.

bored on sunday, i had an idea to start a repository to document a collection of my thoughts. more specifically, it would be a 
personal journal of little things that i thought were worth writing down.

as i loaded up github, i created a new repository. as the website prompted me for a name, i thought for a quick second, and typed
out "getting better at doing work." the name did a pretty good job of describing what the repo would involve, and that seemed 
good enough for me. as i tried to connect to the repo, i was confronted with the error message "Error: Repository not found"

weird, I thought to myself. i double checked the repository URL that github had conveniently copied to my clipboard, and made 
sure that i hadn't accidentally fatfingered anything. it looked good, so i went back to github to check if perhaps the repository
had not been set up properly. since i  had accidentally closed the tab, i navigated to my repositories to re-open the page. to my
dismay, "getting better at doing work" had disappeared from my repositories, nowhere to be found. i gave a quick look around, but
found no clue as to whether that repository had ever existed.

even weirder, i had already navigated onto the repo page previously and it had just seemingly disappeared off of my account. i
chalked it up to me being a github noob, perhaps i had missed a step during repo creation that had resulted in the repo not being
saved. oh well.

i decided to just start over and make a new repo, making sure that i followed every instruction during creation in detail. as the
website prompted me again to re-enter a name, i sat and thought for a second. the repo name that i previously put down seemed a
little long, and even though it did describe what i wanted to do pretty well, it didn't seem as concise as it could have been. 
this time, i decided to call the repo "do work good." a little bit of me liked the way it sounded. as i continued to try to clone
the repo on my laptop, my terminal spit back the same message "error: repository not found." 

i later found out that github was migrating a data storage system, and was experiencing inconsistencies with user data. however,
in the moment, i was baffled. i had gone through the same process in creating this repository as i did for the repos i had to
make for my classes. i began to ponder what could have gone wrong. i realized that instead of "cloning" the repo, i had actually
just set up the repo as a remote repository using git remote add origin. it seemed weird that maybe this error had caused the
repo to potentially delete itself, but as a noob to git and github, i thought that maybe it was just part of a bigger concept 
that i had failed to understand.

i set out to create a new repo, yet again. this time, when i tried to enter my "do work good" name, github spit back an error "A
repository of this name already exists." i returned to my repositories, and checked to see if it did, in fact, exist. seemingly 
taunting me, github showed no repositories under that name. i returned to create a new repo in frustration, planning to bypass 
the error message by just creating a new repo under a new name and seeing if cloning it would work.

as i realized that the repo's purpose was also to give me some more time to familiarize myself with git, i wrote "getting better 
at git and work." too long. i revised it to "get good at work," in inspiration of my "erased" second repo. suddenly, i realized 
what i wanted to name it. "git good." concise enough to be easily typed, but also conveying what the repo was to me. i created 
this final repo, hoping to finally clone it and start writing. however, as expected, the repo disappeared yet again. in 
frustration, i finally realized that maybe it wasn't my fault. a quick google search revealed that my novice git skills were not 
to blame, but that github itself was down.  

this experience taught me a few things. in my struggle with cloning/pushing to the repo, i picked up a few more command line 
shortcuts to use terminal more effectively. in addition, i have been reaffirmed that google is really your best friend. however, 
the most important lesson that i think i have taken away from this frustrating and troubleshooting filled night is the importance 
of revision. although the slight changes in my repo names from my first to my third revision aren't going to affect the way i use 
this repo much, the journey that brought me through these changes made me realized that forced revision is an indispensable 
process.

when i entered the first name for the repo, it worked. however, i didn't know to what extent it could be improved, shortened, or 
changed. it was only through the revisions that github forced me through that i realized how much i could improve the repo name.

during the same time that github was down, i had to work on an assignment for my CS61 class. i had procrastinated and had failed 
to fork the assignment files, and was unable to fork them because of github's outage. since i didn't want to wait til github was 
repaired, i started the project based on specifications that had been posted online. when github finally did come back up, and i 
successfully forked the repo, i had to rewrite the code that i had previously written into the format of the assignment files 
that the teacher wanted. in the rewrite, i caught a multitude of errors and redundancies that i had overlooked before, and grew a 
deeper understanding of how the code functioned line to line.

revisions seem boring. if the code works, why rewrite it? although code may work, there may be dozens of memory leaks or 
inefficiecies that may be overlooked if i decide to just finalize the code once it works. the github outage on sunday into a good 
bit of monday most definitely caused havok among millions of users. however, for me, i am happy that i have experienced first-
hand the importance of forced revision.
